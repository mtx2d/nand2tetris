import pathlib
import unittest
from tokenizer import Tokenizer
from jack_token import Token, Keyword, Symbol, Identifier, IntegerConstant, StringConstant

TEST_FILE = pathlib.Path(__file__).parent.joinpath("TestTokenMain.jack")


class TestTokenizer(unittest.TestCase):
    def test_parse(self):
        file_without_comments = Tokenizer.parse(TEST_FILE)

        self.assertEqual(Keyword("class"), next(file_without_comments))
        self.assertEqual(Identifier("Main"), next(file_without_comments))
        self.assertEqual(Symbol("{"), next(file_without_comments))
        self.assertEqual(Keyword("static"), next(file_without_comments))
        self.assertEqual(Keyword("boolean"), next(file_without_comments))
        self.assertEqual(Identifier("test"), next(file_without_comments))
        self.assertEqual(Symbol(";"), next(file_without_comments))
        self.assertEqual(Keyword("function"), next(file_without_comments))
        self.assertEqual(Keyword("void"), next(file_without_comments))
        self.assertEqual(Identifier("main"), next(file_without_comments))
        self.assertEqual(Symbol("("), next(file_without_comments))
        self.assertEqual(Symbol(")"), next(file_without_comments))
        self.assertEqual(Symbol("{"), next(file_without_comments))
        self.assertEqual(Keyword("var"), next(file_without_comments))
        self.assertEqual(Identifier("SquareGame"), next(file_without_comments))
        self.assertEqual(Identifier("game"), next(file_without_comments))
        self.assertEqual(Symbol(";"), next(file_without_comments))
        self.assertEqual(Keyword("let"), next(file_without_comments))
        self.assertEqual(Identifier("game"), next(file_without_comments))
        self.assertEqual(Symbol("="), next(file_without_comments))
        self.assertEqual(Identifier("SquareGame"), next(file_without_comments))
        self.assertEqual(Symbol("."), next(file_without_comments))
        self.assertEqual(Identifier("new"), next(file_without_comments))
        self.assertEqual(Symbol("("), next(file_without_comments))
        self.assertEqual(Symbol(")"), next(file_without_comments))
        self.assertEqual(Symbol(";"), next(file_without_comments))
        self.assertEqual(Keyword("do"), next(file_without_comments))
        self.assertEqual(Identifier("game"), next(file_without_comments))
        self.assertEqual(Symbol("."), next(file_without_comments))
        self.assertEqual(Identifier("run"), next(file_without_comments))
        self.assertEqual(Symbol("("), next(file_without_comments))
        self.assertEqual(Symbol(")"), next(file_without_comments))
        self.assertEqual(Symbol(";"), next(file_without_comments))
        self.assertEqual(Keyword("do"), next(file_without_comments))
        self.assertEqual(Identifier("game"), next(file_without_comments))
        self.assertEqual(Symbol("."), next(file_without_comments))
        self.assertEqual(Identifier("dispose"), next(file_without_comments))
        self.assertEqual(Symbol("("), next(file_without_comments))
        self.assertEqual(Symbol(")"), next(file_without_comments))
        self.assertEqual(Symbol(";"), next(file_without_comments))
        self.assertEqual(Keyword("return"), next(file_without_comments))
        self.assertEqual(Symbol(";"), next(file_without_comments))
        self.assertEqual(Symbol("}"), next(file_without_comments))


        self.assertEqual(Keyword("function"), next(file_without_comments))
        self.assertEqual(Keyword("void"), next(file_without_comments))
        self.assertEqual(Identifier("test"), next(file_without_comments))
        self.assertEqual(Symbol("("), next(file_without_comments))
        self.assertEqual(Symbol(")"), next(file_without_comments))
        self.assertEqual(Symbol("{"), next(file_without_comments))
        self.assertEqual(Keyword("var"), next(file_without_comments))
        self.assertEqual(Keyword("int"), next(file_without_comments))
        self.assertEqual(Identifier("i"), next(file_without_comments))
        self.assertEqual(Symbol(","), next(file_without_comments))
        self.assertEqual(Identifier("j"), next(file_without_comments))
        self.assertEqual(Symbol(";"), next(file_without_comments))
        self.assertEqual(Keyword("var"), next(file_without_comments))
        self.assertEqual(Identifier("String"), next(file_without_comments))
        self.assertEqual(Identifier("s"), next(file_without_comments))
        self.assertEqual(Symbol(";"), next(file_without_comments))
        self.assertEqual(Keyword("var"), next(file_without_comments))
        self.assertEqual(Identifier("Array"), next(file_without_comments))
        self.assertEqual(Identifier("a"), next(file_without_comments))
        self.assertEqual(Symbol(";"), next(file_without_comments))

        self.assertEqual(Keyword("if"), next(file_without_comments))
        self.assertEqual(Symbol("("), next(file_without_comments))
        self.assertEqual(Keyword("false"), next(file_without_comments))
        self.assertEqual(Symbol(")"), next(file_without_comments))
        self.assertEqual(Symbol("{"), next(file_without_comments))
        self.assertEqual(Keyword("let"), next(file_without_comments))
        self.assertEqual(Identifier("s"), next(file_without_comments))
        self.assertEqual(Symbol("="), next(file_without_comments))
        self.assertEqual(StringConstant('"string constant"'), next(file_without_comments))
        self.assertEqual(Symbol(";"), next(file_without_comments))
        self.assertEqual(Keyword("let"), next(file_without_comments))
        self.assertEqual(Identifier("s"), next(file_without_comments))
        self.assertEqual(Symbol("="), next(file_without_comments))
        self.assertEqual(Keyword('null'), next(file_without_comments))
        self.assertEqual(Symbol(";"), next(file_without_comments))
        self.assertEqual(Keyword("let"), next(file_without_comments))
        self.assertEqual(Identifier("a"), next(file_without_comments))
        self.assertEqual(Symbol("["), next(file_without_comments))
        self.assertEqual(IntegerConstant(1), next(file_without_comments))
        self.assertEqual(Symbol("]"), next(file_without_comments))
        self.assertEqual(Symbol("="), next(file_without_comments))
        self.assertEqual(Identifier("a"), next(file_without_comments))
        self.assertEqual(Symbol("["), next(file_without_comments))
        self.assertEqual(IntegerConstant(2), next(file_without_comments))
        self.assertEqual(Symbol("]"), next(file_without_comments))
        self.assertEqual(Symbol(";"), next(file_without_comments))
        self.assertEqual(Symbol("}"), next(file_without_comments))

        self.assertEqual(Keyword("else"), next(file_without_comments))
        self.assertEqual(Symbol("{"), next(file_without_comments))
        self.assertEqual(Keyword("let"), next(file_without_comments))
        self.assertEqual(Identifier("i"), next(file_without_comments))
        self.assertEqual(Symbol("="), next(file_without_comments))
        self.assertEqual(Identifier("i"), next(file_without_comments))
        self.assertEqual(Symbol("*"), next(file_without_comments))
        self.assertEqual(Symbol("("), next(file_without_comments))
        self.assertEqual(Symbol("-"), next(file_without_comments))
        self.assertEqual(Identifier("j"), next(file_without_comments))
        self.assertEqual(Symbol(")"), next(file_without_comments))
        self.assertEqual(Symbol(";"), next(file_without_comments))

        self.assertEqual(Keyword("let"), next(file_without_comments))
        self.assertEqual(Identifier("j"), next(file_without_comments))
        self.assertEqual(Symbol("="), next(file_without_comments))
        self.assertEqual(Identifier("j"), next(file_without_comments))
        self.assertEqual(Symbol("/"), next(file_without_comments))
        self.assertEqual(Symbol("("), next(file_without_comments))
        self.assertEqual(Symbol("-"), next(file_without_comments))
        self.assertEqual(IntegerConstant(2), next(file_without_comments))
        self.assertEqual(Symbol(")"), next(file_without_comments))
        self.assertEqual(Symbol(";"), next(file_without_comments))

        self.assertEqual(Keyword("let"), next(file_without_comments))
        self.assertEqual(Identifier("i"), next(file_without_comments))
        self.assertEqual(Symbol("="), next(file_without_comments))
        self.assertEqual(Identifier("i"), next(file_without_comments))
        self.assertEqual(Symbol("|"), next(file_without_comments))
        self.assertEqual(Identifier("j"), next(file_without_comments))
        self.assertEqual(Symbol(";"), next(file_without_comments))